# This is a Taskfile that is supposed to mirror the Makefile

version: '3'

tasks:
  all:
    desc: "Build the application"
    cmds:
      - task: build
      - task: test

  templ-install:
    desc: "Install templ if not present"
    silent: true
    cmds:
      - |
        if ! command -v templ > /dev/null; then
          read -p "Go's 'templ' is not installed on your machine. Do you want to install it? [Y/n] " choice;
          if [ "$$choice" != "n" ] && [ "$$choice" != "N" ]; then
            go install github.com/a-h/templ/cmd/templ@latest;
            if ! command -v templ > /dev/null; then
              echo "templ installation failed. Exiting...";
              exit 1;
            fi;
          else
            echo "You chose not to install templ. Exiting...";
            exit 1;
          fi;
        fi

  tailwind:
    desc: "Install tailwind if not present"
    silent: true
    cmds:
      - |
        if [ ! -f tailwindcss ]; then
          curl -sL https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-x64 -o tailwindcss;
        fi
      - chmod +x tailwindcss

  build:
    desc: "Build the Go application"
    deps:
      - task: tailwind
      - task: templ-install
    cmds:
      - echo "Building..."
      - templ generate
      - ./tailwindcss -i cmd/web/assets/css/input.css -o cmd/web/assets/css/output.css
      - go build -o main cmd/api/main.go

  run:
    desc: "Run the Go application"
    cmds:
      - go run cmd/api/main.go

  docker-run:
    desc: "Create DB container"
    silent: true
    cmds:
      - |
        if docker compose up 2>/dev/null; then
          :
        else
          echo "Falling back to Docker Compose V1";
          docker-compose up;
        fi

  docker-down:
    desc: "Shutdown DB container"
    silent: true
    cmds:
      - |
        if docker compose down 2>/dev/null; then
          :
        else
          echo "Falling back to Docker Compose V1";
          docker-compose down;
        fi

  test:
    desc: "Test the Go application"
    cmds:
      - echo "Testing..."
      - go test ./... -v

  itest:
    desc: "Run integration tests"
    cmds:
      - echo "Running integration tests..."
      - go test ./internal/database -v

  clean:
    desc: "Clean the binary"
    cmds:
      - echo "Cleaning..."
      - rm -f main

  watch:
    desc: "Live reload with air"
    silent: true
    cmds:
      - |
        if command -v air > /dev/null; then
          air;
          echo "Watching...";
        else
          read -p "Go's 'air' is not installed on your machine. Do you want to install it? [Y/n] " choice;
          if [ "$$choice" != "n" ] && [ "$$choice" != "N" ]; then
            go install github.com/air-verse/air@latest;
            air;
            echo "Watching...";
          else
            echo "You chose not to install air. Exiting...";
            exit 1;
          fi;
        fi

